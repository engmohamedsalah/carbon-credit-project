digraph CarbonCreditML {
    // Graph settings
    rankdir=TB;
    node [shape=box, style="rounded,filled", fillcolor=lightblue, fontname="Arial"];
    edge [fontname="Arial"];
    
    // Data Acquisition
    subgraph cluster_data_acquisition {
        label="Data Acquisition";
        style=filled;
        color=lightgrey;
        
        sentinel_api [label="Sentinel-2 API\n(Copernicus Open Access Hub)", fillcolor=lightgreen];
        hansen_api [label="Hansen Global Forest Change\nData API", fillcolor=lightgreen];
        data_download [label="Data Download\n(data_preparation.py)"];
        
        sentinel_api -> data_download;
        hansen_api -> data_download;
    }
    
    // Data Preprocessing
    subgraph cluster_preprocessing {
        label="Data Preprocessing";
        style=filled;
        color=lightgrey;
        
        band_extraction [label="Band Extraction\n(B02, B03, B04, B08)"];
        ndvi_calculation [label="NDVI Calculation"];
        data_normalization [label="Data Normalization"];
        patch_creation [label="Patch Creation\n(256x256 pixels)"];
        
        data_download -> band_extraction;
        band_extraction -> ndvi_calculation;
        ndvi_calculation -> data_normalization;
        data_normalization -> patch_creation;
    }
    
    // Model Training
    subgraph cluster_training {
        label="Model Training";
        style=filled;
        color=lightgrey;
        
        dataset_creation [label="Dataset Creation\n(ForestChangeDataset)"];
        unet_model [label="U-Net Model\nInitialization", fillcolor=lightyellow];
        model_training [label="Model Training\n(train_forest_change.py)"];
        model_validation [label="Model Validation"];
        model_saving [label="Model Saving\n(.pth file)"];
        
        patch_creation -> dataset_creation;
        dataset_creation -> model_training;
        unet_model -> model_training;
        model_training -> model_validation;
        model_validation -> model_saving;
    }
    
    // Inference
    subgraph cluster_inference {
        label="Inference";
        style=filled;
        color=lightgrey;
        
        new_image [label="New Sentinel-2\nImage"];
        image_preprocessing [label="Image Preprocessing"];
        model_loading [label="Model Loading"];
        prediction [label="Forest Change\nPrediction"];
        
        new_image -> image_preprocessing;
        model_saving -> model_loading;
        image_preprocessing -> prediction;
        model_loading -> prediction;
    }
    
    // Explainable AI
    subgraph cluster_xai {
        label="Explainable AI";
        style=filled;
        color=lightgrey;
        
        integrated_gradients [label="Integrated Gradients", fillcolor=lightsalmon];
        gradient_shap [label="Gradient SHAP", fillcolor=lightsalmon];
        occlusion [label="Occlusion", fillcolor=lightsalmon];
        explanation_viz [label="Explanation\nVisualization"];
        
        prediction -> integrated_gradients;
        prediction -> gradient_shap;
        prediction -> occlusion;
        integrated_gradients -> explanation_viz;
        gradient_shap -> explanation_viz;
        occlusion -> explanation_viz;
    }
    
    // Carbon Estimation
    subgraph cluster_carbon {
        label="Carbon Sequestration Estimation";
        style=filled;
        color=lightgrey;
        
        before_after [label="Before/After\nComparison"];
        forest_change [label="Forest Change\nCalculation"];
        carbon_calculation [label="Carbon Impact\nCalculation"];
        carbon_viz [label="Carbon Impact\nVisualization"];
        
        prediction -> before_after;
        before_after -> forest_change;
        forest_change -> carbon_calculation;
        carbon_calculation -> carbon_viz;
    }
    
    // API Integration
    subgraph cluster_api {
        label="API Integration";
        style=filled;
        color=lightgrey;
        
        api_endpoints [label="FastAPI Endpoints\n(satellite.py)"];
        blockchain_cert [label="Blockchain\nCertification"];
        human_review [label="Human-in-the-loop\nReview"];
        
        explanation_viz -> api_endpoints;
        carbon_viz -> api_endpoints;
        api_endpoints -> blockchain_cert;
        api_endpoints -> human_review;
    }
    
    // Frontend
    subgraph cluster_frontend {
        label="Frontend";
        style=filled;
        color=lightgrey;
        
        web_interface [label="Web Interface\n(React)"];
        interactive_map [label="Interactive Map\n(Leaflet.js)"];
        dashboard [label="Dashboard\n(Charts & Visualizations)"];
        
        api_endpoints -> web_interface;
        web_interface -> interactive_map;
        web_interface -> dashboard;
    }
}
